# Generated by Django 4.2.2 on 2023-06-23 05:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0017_alter_authororder_author_alter_authororder_bibtex"),
    ]

    operations = [
        migrations.AddField(
            model_name="bibtex",
            name="booktitle",
            field=models.CharField(
                blank=True,
                help_text="The title of the book when using an inbook or incollection BibTeX entry type.",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="chapter",
            field=models.PositiveIntegerField(
                blank=True, help_text="The number of a chapter in a book.", null=True
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="doi",
            field=models.CharField(
                blank=True,
                help_text="The digital object identifier (DOI) of a journal article, conference paper, book chapter or book.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="edition",
            field=models.CharField(
                blank=True,
                help_text="The edition number of a book.",
                max_length=16,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="howpublished",
            field=models.CharField(
                blank=True,
                help_text="A notice for unusual publications.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="institution",
            field=models.CharField(
                blank=True,
                help_text="The name of the institution that published and/or sponsored the report.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="isbn",
            field=models.CharField(
                blank=True,
                help_text="The International Standard Book Number (ISBN) of a book or report.",
                max_length=64,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="issn",
            field=models.CharField(
                blank=True,
                help_text="The International Standard Serial Number (ISSN) of a journal or magazine.",
                max_length=64,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="journal",
            field=models.CharField(
                blank=True,
                help_text="The name of the journal or magazine the article was published in.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="month",
            field=models.CharField(
                blank=True,
                help_text="The month during the work was published or in the case of an unpublished article the month during it was written.",
                max_length=16,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="note",
            field=models.CharField(
                blank=True,
                help_text="Any information that might be interesting to the reader and did not fit into any of the other fields.",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="number",
            field=models.CharField(
                blank=True,
                help_text="The number of the report for a techreport entry, and the issue number for a journal article.",
                max_length=128,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="organization",
            field=models.CharField(
                blank=True,
                help_text="The name of the institution that organized or sponsored the conference, or that published the manual.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="pages",
            field=models.CharField(
                blank=True,
                help_text="Page numbers or a page range.",
                max_length=64,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="publisher",
            field=models.CharField(
                blank=True,
                help_text="The name of the publisher.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="school",
            field=models.CharField(
                blank=True,
                help_text="The name of the university or degree awarding institution where the thesis was written.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="series",
            field=models.CharField(
                blank=True,
                help_text="The name of the series or set of books.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="title",
            field=models.CharField(
                blank=True,
                help_text="The title of the work.",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="type",
            field=models.CharField(
                blank=True,
                help_text="A more descriptive name of the type of work.",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="url",
            field=models.CharField(
                blank=True,
                help_text="The URL of a web page.",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="volume",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="The volume number of the journal or multi-volume book.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bibtex",
            name="year",
            field=models.CharField(
                blank=True,
                help_text="The year the work was published or in the case of an unpublished article the year it was written.",
                max_length=64,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="EditorOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        help_text="The relative order, with lower numbers (i.e. towards neg. inf.) being first."
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editor_orders",
                        to="core.author",
                    ),
                ),
                (
                    "bibtex",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editor_orders",
                        to="core.bibtex",
                    ),
                ),
            ],
            options={
                "ordering": ("bibtex", "order"),
            },
        ),
    ]
