# Generated by Django 4.2.2 on 2023-06-30 03:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first",
                    models.CharField(
                        help_text="First name or given names", max_length=64
                    ),
                ),
                (
                    "last",
                    models.CharField(
                        help_text="Last name or family name", max_length=64
                    ),
                ),
                (
                    "von",
                    models.CharField(
                        blank=True,
                        help_text="A particle (e.g. de, de la, der, van, von)",
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "jr",
                    models.CharField(
                        blank=True,
                        help_text="A suffix (e.g. Jr., Sr., III)",
                        max_length=16,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("last", "first", "von", "jr"),
            },
        ),
        migrations.CreateModel(
            name="Bibtex",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("AR", "article"),
                            ("BO", "book"),
                            ("BT", "booklet"),
                            ("CO", "conference"),
                            ("IB", "inbook"),
                            ("IC", "incollection"),
                            ("IP", "inproceedings"),
                            ("MA", "manual"),
                            ("MT", "masterthesis"),
                            ("MI", "misc"),
                            ("PT", "phdthesis"),
                            ("PR", "proceedings"),
                            ("TE", "techreport"),
                            ("UN", "unpublished"),
                        ],
                        default="AR",
                        help_text="The entry type.",
                        max_length=2,
                    ),
                ),
                (
                    "citekey",
                    models.CharField(
                        help_text="The citation key for this reference.",
                        max_length=256,
                        unique=True,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="The address of the publisher or the institution.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "annote",
                    models.CharField(
                        blank=True,
                        help_text="An annotation (brief descriptive paragraph) about the reference.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "booktitle",
                    models.CharField(
                        blank=True,
                        help_text="The title of the book when using an inbook or incollection BibTeX entry type.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "chapter",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The number of a chapter in a book.",
                        null=True,
                    ),
                ),
                (
                    "doi",
                    models.CharField(
                        blank=True,
                        help_text="The digital object identifier (DOI) of a journal article, conference paper, book chapter or book.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "edition",
                    models.CharField(
                        blank=True,
                        help_text="The edition number of a book.",
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "howpublished",
                    models.CharField(
                        blank=True,
                        help_text="A notice for unusual publications.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "institution",
                    models.CharField(
                        blank=True,
                        help_text="The name of the institution that published and/or sponsored the report.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "issn",
                    models.CharField(
                        blank=True,
                        help_text="The International Standard Serial Number (ISSN) of a journal or magazine.",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "isbn",
                    models.CharField(
                        blank=True,
                        help_text="The International Standard Book Number (ISBN) of a book or report.",
                        max_length=64,
                        null=True,
                    ),
                ),
                ("issue", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "journal",
                    models.CharField(
                        blank=True,
                        help_text="The name of the journal or magazine the article was published in.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        blank=True,
                        help_text="The month during the work was published or in the case of an unpublished article the month during it was written.",
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "note",
                    models.CharField(
                        blank=True,
                        help_text="Any information that might be interesting to the reader and did not fit into any of the other fields.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text="The number of the report for a techreport entry, and the issue number for a journal article.",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        help_text="The name of the institution that organized or sponsored the conference, or that published the manual.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "pages",
                    models.CharField(
                        blank=True,
                        help_text="Page numbers or a page range.",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "publisher",
                    models.CharField(
                        blank=True,
                        help_text="The name of the publisher.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "school",
                    models.CharField(
                        blank=True,
                        help_text="The name of the university or degree awarding institution where the thesis was written.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        help_text="A more descriptive name of the type of work.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "series",
                    models.CharField(
                        blank=True,
                        help_text="The name of the series or set of books.",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="The title of the work.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="The URL of a web page.",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "volume",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The volume number of the journal or multi-volume book.",
                        null=True,
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        blank=True,
                        help_text="The year the work was published or in the case of an unpublished article the year it was written.",
                        max_length=64,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "BibTeX",
                "verbose_name_plural": "BibTeX",
                "ordering": ("citekey",),
            },
        ),
        migrations.CreateModel(
            name="EditorOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        help_text="The relative order, with lower numbers (i.e. towards neg. inf.) being first."
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editor_orders",
                        to="literature.author",
                    ),
                ),
                (
                    "bibtex",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editor_orders",
                        to="literature.bibtex",
                    ),
                ),
            ],
            options={
                "ordering": ("bibtex", "order"),
            },
        ),
        migrations.CreateModel(
            name="AuthorOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        help_text="The relative order, with lower numbers (i.e. towards neg. inf.) being first."
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_orders",
                        to="literature.author",
                    ),
                ),
                (
                    "bibtex",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_orders",
                        to="literature.bibtex",
                    ),
                ),
            ],
            options={
                "ordering": ("bibtex", "order"),
            },
        ),
        migrations.AddConstraint(
            model_name="editororder",
            constraint=models.UniqueConstraint(
                fields=("bibtex", "order"), name="editor_order"
            ),
        ),
        migrations.AddConstraint(
            model_name="authororder",
            constraint=models.UniqueConstraint(
                fields=("bibtex", "order"), name="author_order"
            ),
        ),
    ]
